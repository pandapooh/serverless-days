AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template using Application Auto Scaling + Provisioned Concurrency
Globals:
    Function:
        Timeout: 5

Resources:
  MyFunction:
    Type: AWS::Serverless::Function
    Properties:
        InlineCode: |
            // random initialization time
            const MAX = 5000
            const MIN = 3000
            
            const random = Math.floor(Math.random() * (MAX - MIN + 1)) + MIN;
            const date = Date.now();
            let currentDate;
            
            do {
                currentDate = Date.now();
            } while (currentDate - date < random);
            
            exports.handler = async (event) => {
                console.log(event);    
                return {
                    statusCode: 200,
                    body: JSON.stringify('hello from sample provisioned lambda!!')
                }
            }
        Handler: index.handler
        Runtime: nodejs12.x
        MemorySize: 256
        AutoPublishAlias: live
        Role: <replace this>
        Tracing: Active
        DeploymentPreference:
            Type: AllAtOnce # Or Canary10Percent5Minutes, Linear10PercentEvery1Minute, ...
        ProvisionedConcurrencyConfig:
            ProvisionedConcurrentExecutions: 1
        Events:
            HelloWorld:
                Type: HttpApi # Using the new HTTP API here

  MyScalableTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
        MaxCapacity: 100
        MinCapacity: 1
        ResourceId: !Sub function:${MyFunction}:live # You need to specify an alis or version here
        RoleARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency
        ScalableDimension: lambda:function:ProvisionedConcurrency
        ServiceNamespace: lambda
    DependsOn: MyFunctionAliaslive # This is your function logical ID + "Alias" + what you use for AutoPublishAlias

  MyTargetTrackingScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
        PolicyName: utilization
        PolicyType: TargetTrackingScaling
        ScalingTargetId: !Ref MyScalableTarget
        TargetTrackingScalingPolicyConfiguration:
            TargetValue: 0.70 # Any value between 0 and 1 can be used here
            PredefinedMetricSpecification:
                PredefinedMetricType: LambdaProvisionedConcurrencyUtilization